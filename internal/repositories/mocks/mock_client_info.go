// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/abezemskiy/gophkeeper/internal/client/identity (interfaces: IUserInfoStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	identity "github.com/abezemskiy/gophkeeper/internal/client/identity"
	gomock "github.com/golang/mock/gomock"
)

// MockIUserInfoStorage is a mock of IUserInfoStorage interface.
type MockIUserInfoStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIUserInfoStorageMockRecorder
}

// MockIUserInfoStorageMockRecorder is the mock recorder for MockIUserInfoStorage.
type MockIUserInfoStorageMockRecorder struct {
	mock *MockIUserInfoStorage
}

// NewMockIUserInfoStorage creates a new mock instance.
func NewMockIUserInfoStorage(ctrl *gomock.Controller) *MockIUserInfoStorage {
	mock := &MockIUserInfoStorage{ctrl: ctrl}
	mock.recorder = &MockIUserInfoStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserInfoStorage) EXPECT() *MockIUserInfoStorageMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIUserInfoStorage) Get() (identity.AuthData, string) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(identity.AuthData)
	ret1, _ := ret[1].(string)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIUserInfoStorageMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIUserInfoStorage)(nil).Get))
}

// Set mocks base method.
func (m *MockIUserInfoStorage) Set(arg0 identity.AuthData, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1)
}

// Set indicates an expected call of Set.
func (mr *MockIUserInfoStorageMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockIUserInfoStorage)(nil).Set), arg0, arg1)
}
